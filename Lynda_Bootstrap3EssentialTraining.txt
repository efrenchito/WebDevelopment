@01.Introduction and Installation options
  What is Bootstrap?
    . A framework: That helps you create Web Sites quickly, with tons of features that we'll be hard or take a long time for you create yourself
    . Mobile first
    . Responsive design
    . Battle tested
    . Uses modern web technologies
  
  What is a Framework?
    . A way to organize your code
    . If you follow a certain structure...
    . A framework gives you many abilities
    . A framework gives you many abilities
	  - Pre-built CSS styles
	  - JavaScript functionality
	
  When Should I Use BootStrap?
    . Excellent for small, quick projects
    . Prototyping and scaffolding sites
    . Also great for larger projects
	  - Customize your install
	  
  Installation:Basic
    There are two kinds of installation, that you can do with Bootstrap Basic/Advance -> http://getbootstrap.com/
	Regardless of the installation method you use, Bootstrap requires jQuery so you will to need download it separatelly -> http://jquery.com
	
@02.Creating a basic template using CDNs (Content Delivery Network)
  -> https://goo.gl/nteWC3
	<!-- HEAD SECTION -->

	<!-- IE Edge Meta Tag -->
	<!-- This is a special tag, that let's IE knows which versions engine to run render the page with -->
	<!-- by specifying edge here, we're saying that we want the latest and greats rendering engine. This is considered best practice -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge">

	<!-- Viewport -->
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<!-- Minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">

	<!-- Optional Theme -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css">

	<!-- Optional IE8 Support -->
	<!--[if lt IE 9]>
	  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
	<![endif]-->


	<!-- FOOTER SECTION - Before closing </body> tag -->

	<!-- jQuery -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>

	<!-- Minified JavaScript -->
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
	
  -> Let's create boostrap/index.html (Sublime Text)
	//bootstrap.index
	<!DOCTYPE html>
	<html lang=en>
	<head>
	  <meta charset="utf-8">
	  <meta http-equiv="X-UA-Compatible" content="IE=edge">
	  <meta name="viewport" content="width=device-width, initial-scale=1">
	  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
	  <title>Bootstrap</title>
	</head>

	<body>

	</body>
	 <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
	 <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
	</html>
	
  -> Lets add css/script.css and js/script.js and reference those files within our index.html and also some markup to see how it render on a Browser
	<!DOCTYPE html>
	<html lang=en>
	<head>
	  <meta charset="utf-8">
	  <meta http-equiv="X-UA-Compatible" content="IE=edge">
	  <meta name="viewport" content="width=device-width, initial-scale=1">
	  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
	  <link rel="stylesheet" href="css/style.css">
	  <title>Bootstrap</title>
	</head>

	<body>

	</body>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
		<script src="js/script.js"></script>
	</html>
  
	
	

  

  Container
  Row
  Column
  Sections
  

Column Metrics
                Extra small   Small    Medium    Large 
				   <768px    >=768px   >=992px  >=1200px 
				   
   Container	    Auto      750px     970px    1170px
   
      Size	      .col-xs-   .col-sm-  .col-md- .col.lg-
	  
  Column Width      Auto      ~62px     ~81px    ~97px


Using Multiple column classes
  This gives you the flexibility to completly modify how the grid behaves at this different breakpoints that's also an essential skill to master in Boostrap design.
  
  ...
  </head>
  <body>
    <div class="services container">
	  <h2>Services</h2>
	  <div class="row">
	    <section class="col-sm-6 col-md-4 col-lg-2">
		  ...


Resetting columns (clearfix and Responsive design classes)
  Ocassionally you run into a problem where some of your content forces the grid to do funny things "using sections"
  In those instances you can use the builting <clearfix> class aswell as some special responsive utility classes.
  1. You can think using rows but that were force the layout to allways break at that position, so that's not really a good solution
  2. Clearfix class is generally used in CSS to clear problems with flow
  3. Responsive design class can be used as a class using the keyword <visible/hidden-[size]-block|inlineblock|inline>
  
    <div class="clearfix visible-sm-block"></div>

  You can also use this in other ways: 
  You could for example hide icons at certain breakpoints maybe at a very small mobile device breakpoint where you don't want people to see icons at all, 
  just want them to read content


  

@11.Offsetting columns
In Bootstrap you can ask certain columns to move over by a certain number of column width that's call offsetting.

    <!DOCTYPE html>
	<html lang="en>
    <head>
      <meta charset="UTF-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta nane="viewport" content="width=device-width, initial-scale=1">
      <link rel="stylesheet" href="css/bootstrap.min">
      <link rel="stylesheet" href="css/styles.css">
      <title>Bootstrap</title>
    </head>
    <body>

	  <div class="services container">
		<h2>Services</h2>
		<div class="row">
		  <section class="col-sm-6 col-md-4 col-lg-2">
			<img class="icon" src="images/icon-health.svg" alt="Icon">
			<h3>General Health</h3>
			<p>Wellness and senior exams, ultrasound, x-ray and dental cleanings are just a few of our general health services.</p>
		  </section>

		  <section ...
		  ...
		...
	  ...
	
     ->  <section class="col-xs-offset-3 col-xs-6 col-sm-offset-0 col-sm-6 col-md-4 col-lg-"2>
	 
	 Offsetting columns is very useful but you allways have to remember that it can potentially affect other breakpoints so make sure that you learn to 
	 reset offset when necessary.


@12.Nesting columns

@13.Customizing column order with push and pull
  In some designs you may want to control the order of the columns, so that they move from the original column positions.
  Used to achieve layouts where columns can lay in different positions depending on which breakpoints you're targetting.
  Bootstrap has a couple of classes that you can use to acomplish this call push and pull.
  
    <!DOCTYPE html>
	<html lang="en>
    <head>
      <meta charset="UTF-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta nane="viewport" content="width=device-width, initial-scale=1">
      <link rel="stylesheet" href="css/bootstrap.min">
      <link rel="stylesheet" href="css/styles.css">
      <title>Bootstrap</title>
    </head>
    <body>

	  <div class="services container">
		<h2>Services</h2>
		<div class="row">
		  <section class="col-xs-4 col-sm-push-8">
			<img class="icon" src="images/icon-health.svg" alt="Icon">
			<h3>General Health</h3>
			<p>Wellness and senior exams, ultrasound, x-ray and dental cleanings are just a few of our general health services.</p>
		  </section>

		  <section class="col-xs-4">
			<img class="icon" src="images/icon-exoticpets.svg" alt="Icon">
			<h3>Exotic Pets</h3>
			<p>We offer specialized care for reptiles, rondents, birds, and other exotic pets.</p>
		  </section>
		  
		  <section class="col-xs-4 col-sm-pull-8">
			<img class="icon" src="images/icon-exoticpets.svg" alt="Icon">
			<h3>Exotic Pets</h3>
			<p>We offer specialized care for reptiles, rondents, birds, and other exotic pets.</p>
		  </section>
		  ...
		...
	  ...

@014.Styling headings and body copy
  In this chapter I'm going to be over some of the basic styles that come with the bootstrap framework.
  Bootstrap uses Helbetica-new if it's available, then tries to look for Helbetica, Arial and if nothing else is available uses the default sans-serif font.
  
  You can use classes h1...h6 yo emulate a headline somewhere else, but also to create a headline inline which you wouldn't be able to do with in h1 tag
  
	<!DOCTYPE html>
	<html lang="en">
	<head>
	  <meta charset="UTF-8">
	  <meta http-equiv="X-UA-Compatible" content="IE=edge">
	  <meta name="viewport" content="width=device-width, initial-scale=1">
	  <link rel="stylesheet" href="css/bootstrap.min.css">
	  <link rel="stylesheet" href="css/styles.css">
	  <title>Bootstrap</title>
	</head>
	<body>

	<div class="container">
	  <div class="row">
		<section class="col-xs-12">

		<h1>Headline 1<small>Secondary Text</small></h1>
		<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sequi at numquam, vero animi earum delectus, quam ex ad, dolorem quo omnis consequuntur dicta fugit. Nulla porro, accusantium quaerat commodi iste.</p>

		<div class="h1">Headline 1</div>
		<p class="lead">Adipisci veritatis esse expedita odit neque quam! Repellat quas ad cum porro amet, maiores, ullam doloremque, ab dolores in magni ea enim. Commodi quidem consequuntur animi nemo pariatur cumque distinctio.</p>
		...

		</section>
	  </div><!-- row -->   
	</div><!-- content container -->


	<script src="js/jquery-2.1.4.min.js"></script>
	<script src="js/bootstrap.min.js"></script>
	<script src="js/script.js"></script>
	</body>
	</html>
	
  Bootstrap offers all type of literal utilities, like substitutes for things like headlines, small, the lead class and a lot of other ones

@15.Analyzing inline text styles
  Bootstrap comes with a few builtin styles for traditional inline elements, a lot of this are going to be implementations of existing html tags that you're
  allready using, so you just write them how you would normally, but you have to notice that bootstrap is actually modifying some of those styles, that means 
  that if you're going to updating those styles with css, you have to address what bootstrap have made to them.
  
    -> Inspect Element
  Although you're probably familiar with how this tags work is just important to remember that Bootstrap is going to modify atleast some of your browser's
  default and add some styling to this elements, so that if you're working on your own css you gonna have to remember to look for those things, so that you 
  can modify them to your own needs.
    
	<mark></mark>
	<s></s>
	<del></del>
	<ins></ins>
	<u></u>
	<strong></strong>
	<b></b>
	<em></em>
	<i></i>
	
@16.Modifying alignment, transformation, and abbreviations
See -> Exercise Files>Ch03 > 03_03 > bootstrap

	<!DOCTYPE html>
	<html lang="en">
	<head>
	  <meta charset="UTF-8">
	  <meta http-equiv="X-UA-Compatible" content="IE=edge">
	  <meta name="viewport" content="width=device-width, initial-scale=1">
	  <link rel="stylesheet" href="css/bootstrap.min.css">
	  <link rel="stylesheet" href="css/styles.css">
	  <title>Bootstrap</title>
	</head>
	<body>
	<div class="container">
	  <div class="row">
		<section class="col-xs-12">
		<h1 class="text-uppercase">Headline 1</h1>
		<h1 class="text-capitalize">Headline 2</h1>
		<h1 class="text-lowercase">Headline 3</h1>
		<p class="text-center"><abbr title="Captain">Capt.</abbr>Lorem ipsum dolor  ...
		<p class="text-center"><abbr title="United States Air Force" class="initialism">USAF</abbr>Lorem ipsum dolor  ...
		<p class="text-left">Lorem ipsum dolor  ...
		<p class="text-right">Lorem ipsum dolor  ...
		<p class="text-justify">Lorem ipsum dolor  ...
		<p class="text-nowrap">Lorem ipsum dolor  ...

@17.Using blockquotes

	<!DOCTYPE html>
	<html lang="en">
	<head>
	 ...
	<blockquote class="blockquote-reverse">
	  <p>Lorem ipsum dolor  ...</p>
	  <footer>Ray Villalobos</footer>
	</blockquote>  
	
@18.Working with list styles
	
	<!DOCTYPE html>
	<html lang="en">
	<head>
	 ...
	   <h2>List</h2>
      <ol class="list-unstyled">
        <li>Lorem ipsum</li>
        <li>Velit
	  ...
	  <h2>Another List</h2>
	  <ul class="list-inline">
	    <li>quam</li>
		<li>porro</li>
		<li>quasi</li>
	  </ul>
	  ...
	  <h2>Definitions</h2>
	  <dl class="dl-horizontal">
	    <dt>Lorem</dt>
		<dd>Lorem Ipsum dolor sit amet...</dd>
	  
@19.Styling code

	<!DOCTYPE html>
	<html lang="en">
	<head>
	 ...
      <h2>Inline Code</h2>
      <p>To emphasize text, you can use the <code>&lt;em&gt;</code> tag.</p>

      <h2>Control Keys</h2>
      <p>To stop the execution of a process use <kbd>control-c</kbd> or <kbd>q</kbd></p>

      <h2>Variables</h2>
      <var>e</var> = <var>m</var><var>c</var>&sup2;

      <h2>Short Script</h2>
  <pre>
  //replace IMG inside carousels with a background image
  $('#featured .item img').each(function() {
    var imgSrc = $(this).attr('src');
    $(this).parent().css({'background-image': 'url('+imgSrc+')'});
    $(this).remove();
  });
  </pre>

	  <h4>Sample Output</h4>
	  <samp>&lt;div class=&quot;item active&quot; style=&quot;background-image: url(images/carousel-lifestyle.jpg);&quot;&gt;&lt;/div&gt;</samp>
	  
	  <h2>Long Script</h2>
	  <pre class="pre-scrollable">
	  //replace IMG inside carousels with a background image
	  $('#featured .item img').each(function() {
	    var imgSrc = $(this).attr('src');
	    $(this).parent().css({'background-image': 'url('+imgSrc+')'});
	    $(this).remove();
	  });
	  </pre>

@21.Exploring table styles

	<!DOCTYPE html>
	<html lang="en">
	<head>
	 ...
	<body>
		<div class="table-responsive">	 
			<!--<table class="table">-->
			<table class="table table-striped|table-bordered|table-hover|table-condensed">
			  <thead>
				<tr>
				  <th>Class</th>
				  <th>Color</th>
				  <th>Description</th>
				</tr>
			  </thead>
			  <tbody>
				<tr class="active|success|info|warning|danger">
				  ...

@22.Adding image classes
  -> index.html
    <!DOCTYPE html>
	<html lang="en">
	<head>
	 ...
	<body>
	  <div class="container">
	    <div class="row">		
		  <section class="col-sm-4">
		    <img src="images/drwinthrop.jpg" class="img-rounded|img-circle|img-thumbnail img-responsive center-block"
		  

  -> styles.css
  @media (max-width: 767px){
    .img-responsive { 
	    max-width: 50%;
		min-width: 300px;
	}
  }


@23.Understanding Bootstrap helper classes
   -> index.html
   <!DOCTYPE html>
	<html lang="en">
	<head>
	 ...
	<body>
	   <p class="text-muted|text-primary|text-success|text-info|text-danger">
	   <p class="bg-primary|bg-success|bg-info|bg-danger">
	   
	   <h1 class="imghead text-hide">Welcome</h1>
	   <img class="pull-right|pull-left|center-block|clearfix|hidden|show|invisible" src="images/field_sm.jpg" alt="Field photo">
   
   -> style.css
	   .imghead {
	       background-image: url('../images/field_head.jpg');
		   background-position: bottom center;
		   background-size: cover;
		   height: 300px;
	   }

@24.Using responsive utilities
  The hability to control the display property at different break-points, is going to create some really dinamyc layouts.
  You can literally short-high extra columns depending on the break-point or simply show or hide objects depending on the target screen.
  

	Responsive Utilities
	. Visibility at breakpoints/print
	. VISIBILITY-SIZE(-DISPLAY)
	  - Visibility: visible or hidden-
	  - Size: xs, sm, md, lg, print
	  - Display: block, inline, inline-block, print
	  
    -> index.html
    <!DOCTYPE html>
 	<html lang="en">
	<head>
	 ...
	<body>
	   <p><span class="h1 visible-xs-block">Lorem</span>...
	   <p><span class="h1 visible-xs-inline">Lorem</span>...
	   <p><span class="h1 visible-xs-inline" style="width: 400px;">Lorem</span>...
	   <p><span class="h1 hidden-xs">Lorem</span>...
	   <p><span class="h1 visible-print-block">Lorem</span>...

@25.Creating a basic form
    -> index.html Chapter 05>01
    <!DOCTYPE html>
 	<html lang="en">
	<head>
	 ...
	<body>	 
	  <form>
	    <div class="form-group">
	      <label class="sr-only" for="inputName">Name</label>
	      <input class="form-control" type="text" id="inputName" placeholder="Name">
	    </div>

	    <div class="form-group">
	      <label for="inputEmail">Email</label>
	      <input class="form-control" type="email" id="inputEmail" placeholder="Email">
	    </div>

	    <div class="form-group">
	      <label for="selectSite">Site</label>
	      <select class="form-control" id="selectSite">
		    <option>Choose...</option>
		    <option>lynda.com</option>
		    <option>raybo.org</option>
		    <option>iviewsource.com</option>
	      </select>
	    </div>	

	    <div class="checkbox">
	      <label>
		    <input id="inputAddList" type="checkbox">
	        Add me to e-mail blast</label>
	    </div>

	    <div class="form-group">
	      <label for="inputComments">Comments</label>
	      <textarea id="inputComments"></textarea>
	    </div>	

	    <input class="btn btn-default pull-right" type="submit" value="submit">
	  </form>
	  ...

  Notes:
  -> How the <label for="input####" when clicked on it from a MobileDevice focus on the input text field.
  -> Using the class="sr-only" will display those label's only when apply (Screen Readers)
  -> Using the class="form-control" make their widths 100%, additionally gets some padding around the element, a nice color when it's highlighted.
  -> Using class form-group within the parent div will add spacing
  -> When using checkbox/radios label tag doesn't use the for attribute
  -> The input submit includes the btn btn-default pull-right class

@26.Formatting radio and checkbox controls
  Just to review to organize normal input fields into groups for proper spacing you need to put them inside a div with a class of form-group.
  When you do checkboxes or radio buttons you place controls inside a div with the class naming the type of control, notes that the label wrap
  around the control, instead of traditionally next to the control and don't have the for attribute
  
	-> index.html Chapter 05>02
	<form>
	  <div class="form-group">
		<label for="inputName">Name</label>
		<input class="form-control" type="text"
		  id="inputName" placeholder="Your Name">
	  </div>

	  <!--<div class="checkbox"> 
		<label>
		  <input type="checkbox">
		  One
		</label>
	  </div>

	  <div class="checkbox">
		<label>
		  <input type="checkbox">
		  Two
		</label>
	  </div>-->
	  
	  <div class="form-group">
	    <label class="radio-inline">
		  <input name="options" type="radio">
		  One
		</label>
		
		<label class="radio-inline">
		  <input name="options" type="radio">
		  Two
		</label>
	  </div>
	  
	  <input class="btn btn-default"
		type="submit" value="submit">
	</form>

  Notes:
  -> The disable attribute should be used within the class of the div tag enabling that labels also display correct icon
  -> To display the radio/checkbox controls inline add the class="radio-inline | checkbox-inline" removing the div class="radio|checkbox" 
     for each control, adding the div class="form-group" that span the whole controls group

@27.Using inline forms (This will apply only to devices > 768px, very useful for searching or login)
    -> index.html Chapter 05>03
	<form class="form-inline">
	  <div class="form-group">
		<label class="sr-only" for="inputEmail">
		  Email address
		</label>
		<input type="email" class="form-control"
		  id="inputEmail" placeholder="Email">
	  </div>

	  <div class="form-group">
		<label class="sr-only" 
		  for="inputPassword">Password</label>
		<input type="password" class="form-control"
		  id="inputPassword" placeholder="Password">
	  </div>

	  <button type="submit"
		class="btn btn-default">Sign in</button>

	-> style.css
	  .form-inline{
	    text-align: center;
	  }
	
	Notes:
	-> Add the class form-inline to the form tag
	-> Remove the labels in that case
	-> Add a text-align: center; to your style.css


@28.Horizontal Forms
   -> index.html Chapter 05>04
	<form>
	<div class="form-group">
	  <label class="col-sm-2 control-label" for="inputName">Name</label>
	  <div class="col-sm-10">
	    <input class="form-control" type="text"
		  id="inputName" placeholder="Name">
	  </div>
	</div>

	<div class="form-group">
	  <label class="col-sm-2 control-label" for="inputEmail">Email</label>
	  <div class="col-sm-10">
	    <input class="form-control" type="email"
		  id="inputEmail" placeholder="Email">  
	  </div>
	</div>

	<div class="form-group">
	  <label class="col-sm-2 control-label" for="selectSite">Site</label>
	  <div class="col-sm-10">
	    <select class="form-control" id="selectSite">
		  <option>Choose...</option>
		  <option>lynda.com</option>
		  <option>raybo.org</option>
		  <option>iviewsource.com</option>
	    </select>
	  </div>	
	</div>

	<div class="form-group>
	<div class="col-sm-10 col-sm-offset-2">
	<div class="checkbox">
	  <label>
		<input id="inputAddList"
		  type="checkbox">Add me to e-mail blast
	  </label>
	</div>  
	</div>
	</div>

	<div class="form-group">
	  <label class="col-sm-2 control-label" for="inputComments">Comments</label>
	  <div class="col-sm-10">
	    <textarea class="form-control" 
		  id="inputComments"></textarea>  
	  </div>
	</div>  

	<div class="form-group>
	<div class="col-sm-10 col-sm-offset-2">
	<input type="submit" class="btn btn-default"  
	  value="submit">
	</div>  
	</div>
    </form>


@29.Using validation styles

@30.Using input groups

@31.Using miscellaneous styles and sizing
    -> disabled through fieldset's
		...
		<form>
		  <fieldset disabled>
			<legend>Basic Info</legend>
			
			<div class="form-group">
			  ...
		  </fieldset>
		</form>
	-> ReadOnly
	    ...
	    <input class="form-control" type="text" id="inputName" placeholder="Ray Villalobos" value="Ray Villalobos" readonly>
	-> form-control-static
	    ...
	    <p class="form-control-static">Ray Villalobos</p>
	-> Size (There isn't xs size)
	    ...
		<div class="form-group form-group-sm"
		...
	    <input class="form-control" input-lg type="text" id="inputName" placeholder="Ray Villalobos" value="Ray Villalobos">

@32.Using icons
    http://glyphicons.com
	Remember to replace the word halflings with glyphicon <!--<span class="halflings halflings-phone"></span>-->

	->
	  <h3><span class="glyphicon glyphicon-phone" aria-hidden="true"></span>
	       Print</h3>
	  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...

   	->
      <button type="button" class="btn btn-default" aria-label="Print this page">
	    <span class="glyphicon glyphicon-print" aria-hidden="true"></span>
		Print
	  </button>

@33.Creating a dropdown
  Dropdowns are the first elements that we're gonna look at that require javascript.
  It's a very handy way to condense a lot of information into a very small space.
  
  
   -> index.html Ch06>06_01
     <div class="dropdown">
	   <div class="btn-group">
	      <button type="button" class="btn btn-info">
		    Search Pet Info
		  </button>
		  <button type="button" data-toggle="dropdown" id="pettype"
		    aria-haspopup="true" aria-expanded="true"
		    class="btn btn-info dropdpwn-toggle">
			<!--Pet Type-->
		    <span class="caret"></span>
			<span class="sr-only">Toggle Dropdown</span>
		  </button>

		  <ul class="dropdown-menu" aria-lavelledby="pettype">
		    <li class="dropdown-header">Common</li>
		    <li><a href="#">Cat</a></li>
		    <li><a href="#">Dog</a></li>
		    <li><a href="#">Fish</a></li>
		    <li class="disabled"><a href="#">Birds</a></li>
		    <li role="separator" class="divider"></li>
		    <li class="dropdown-header">Exotic</li>
		    <li><a href="#">Amphibian</a></li>
		    <li><a href="#">Reptile</a></li>
		    <li><a href="#">Other</a></li>
		  </ul>
	    </div>
	  </div>	
	  
    -> The first step is to wrap the button and the list with a div with the .dropdown class
	-> data-'name' is a way in HTML5 to adding information to your elements
	   ...
	   <button type="button" data-toggle="dropdown" class=".. dropdown-toggle"
	   <ul class="dropdown-menu">
	-> To let the user know that this button behaves differently
	   ...
	     <span class="caret"></span>
	   </button>
	-> Add some accesibility types in order to be read by screen-readers
       ...	
	   <button ... id="pettype"
	   </button>
	   <ul ... aria-labelledby="pettype"
	-> Let screen readers know it has a popup/expandable|colapsable region
	   <button ... aria-haspopup="true" aria-expanded="true"
	-> Add header/separator to dropdown list
	   <li class="dropdown-header">Common</li>
	   ...
	   <li role="separator" class="divider"></li>
	   <li class="dropdown-header">Exotic</li>
	   ...
	-> You can add a disable class to an element
       <li class="disabled"><a href="#">Birds</a></li>
	-> To add a button group add:
	   ...
	   <div class="btn-group">
	     <button type="button" class="btn btn-info">
		   Search Pet Info
		 </button>
		 <button type="button"
		   ...
		   <span class="sr-only">Toggle Dropdown</span>
		 </button>
		 
@34.Using button groups
@35.Understanding the Bootstrap nav component
  Boostrap navigation is one of the most complex components availables in the framework.
  Is part of a family of elements that all share the nav class, and there are three different navs that you can create:
  . tabs
  . pills
  . nav bars 
  
  -> index.html Ch06>06_03
    ...
	<body>
	<div class="container">
	  <div class="row">
		<section class="col-xs-12">

	  <ul class="nav nav-pills nav-justified">
		<li><a href="#">Home</a></li>
		<li class="active"><a href="#">Mission</a></li>
		<li><a href="#">Services</a></li>
		<li><a href="#">Staff</a></li>
		<li><a href="#">Testimonials</a></li>
	  </ul>  
  
  Notes: 
  -> displaying nav:
     as tabs <ul class="nav nav-tabs">
	 as pills <ul class="nav nav-tabs">
  -> Show one of the tabs as active <li class="active">
  -> Let screen readers know that this is a presentation element. role="presentation" 
  -> navs & pills are stackable <ul class="nav nav-pills nav-stackable">
  -> If you wanna show it justified <ul class="nav nav-pills nav-stackable">
  -> To see it more like navigation <ul class="nav navbar-nav">
     A navigation usually belongs outside at the very top of your layout.
	 Unlike pills you can? have justified navigation.
	 And also at the mobile break-point (xs/768px) navbars will become stack

	 -> index.html Ch06>06_03
    ...
	<body>
	<ul class="nav navbar-nav">
	  <li role="presentation"><a href="#">Home</a></li>
	  <li role="presentation" class="active"><a href="#">Mission</a></li>
	  <li role="presentation"><a href="#">Services</a></li>
	  <li role="presentation"><a href="#">Staff</a></li>
	  <li role="presentation"><a href="#">Testimonials</a></li>
    </ul>
	
	<div class="container">
	  <div class="row">
		<section class="col-xs-12">  
  -> In order to do this more accesible add the <nav tag> this will give the links the right context
     so you can remove the role="presentation" attribute
	 ...
	 <nav class="navbar navbar-default">
	   <ul class="nav navbar-nav">
	     <li role="presentation"><a href="#">Home</a></li>
  -> <nav class="navbar navbar-inverse"> background black and letter white
  -> to display navigation at the bottom <nav class="navbar navbar-default navbar-fixed-bottom">
  -> to display navigation at the top <nav class="navbar navbar-default navbar-fixed-top">	 
	 
	 
@36.Adding content to the navbar

  Notes:
  -> navbar-header 
  -> navbar-brand
  -> navbar-text
  -> navbar-btn

    ...
	<nav class="navbar navbar-default">
	    <div class="container">
	        <div class="navbar-header">
		        <a href="#" class="navbar-brand">Wisdom Pets</a>
		        <p class="navbar-text">pet loving care</p>
		    </div>
		    <p class="navbar-text">Other text</p>
		    <button type="button" class="btn btn-default navbar-btn">sign in</button>
	    </div>


@37.
@38.
@39.
@40.
@41.Using the thumbnail style

    ...
    <div class="col-xs-6 col-sm-4">
      <div class="thumbnail">
        <img src="images/generalHealth.jpg" alt="General Health Photo">
        <div class="caption">
          <h3>General Health</h3>
          <p>Lorem ipsum dolor sit amet ...</p>
        </div>
      </div>  
    </div>

    Notes: 
     -> thumbnail
     -> caption

@42.Adding media styles
  Those look great on layouts where you don't need to use columns

    ...
    //opt1
    <div class="media">
      <div class="media-left"> <!-- media-right media-middle|media-bottom -->
        <a href="#"><img class="media-object" src="images/exoticpets.jpg" alt="Exotic Pets Photo">
        </a>
      </div>
      <div class="media-body">
        <h3 class="media-heading">Exotic Pets</h3>
        <p>Lorem isum dolor sit amet...</p>
      </div>
    </div>

    //opt2
    <ul class="media-list">
      <li class="media">
        <div class="media-left"> <!-- media-right media-middle|media-bottom -->
        <a href="#"><img class="media-object" src="images/exoticpets.jpg"   alt="Exotic Pets Photo">
          </a>
        </div>
        <div class="media-body">
          <h3 class="media-heading">Exotic Pets</h3>
          <p>Lorem isum dolor sit amet...</p>
        </div>
      </li>
    </ul>

    Notes:
    -> media
    -> media-left | media-right / media-top|media-middle|media-bottom
    -> media-object
    -> media-body
    -> media-heading

@43.Flowing Video with responsive embeds

    ...
    <div class="row">
      <div class="col-xs-6 col-sm-4">
        <img class="img-responsive" src="images/exoticpets.jpg" alt="Exotic Pets Photo">
        <h3>Exotic Pets</h3>
        <p>Lorem ipsum dolor sit amet...</p>
      </div>

      <div class="col-xs-6 col-sm-4">
        <div class="embed-responsive embed-responsive-16by9" <!-- 4by3|16by9 -->
          <video class="embed-responsive-item" src="video/petting.mp4" autoplay controls muted></video>
        </div>
        <h3>Grooming</h3>
        <p>Our therapeutic grooming treatments help battle fleas, allergic dermatitis, and other challenging skin conditions.</p>
      </p>

    Notes:
      -> embed-responsive
      -> embed-responsive-16by9|embed-responsive-4by3
      -> embed-responsive-item

@44.Styling list groups
    
    ...
    <ul class="list-group">
      <li class="list-group-item">Cally Reynolds</li>
      <li class="list-group-item">Cally Reynolds</li>
      <li class="list-group-item">Cally Reynolds</li>
      <li class="list-group-item">Cally Reynolds</li>
      <li class="list-group-item">Cally Reynolds</li>
      <li class="list-group-item">Cally Reynolds</li>
      <li class="list-group-item">Cally Reynolds</li>
    </ul>